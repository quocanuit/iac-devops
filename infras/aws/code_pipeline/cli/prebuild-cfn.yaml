Parameters:
  ConnectionArn:
    Description: The CodeConnections ARN for your source repository.
    Type: String
  FullRepositoryId:
    Description: The full repository ID to use with your CodeConnections connection.
    Type: String
  BranchName:
    Description: The branch name to use with your CodeConnections connection.
    Type: String
  CodePipelineName:
    Description: The CodePipeline pipeline name that will deploy to your CloudFormation stack.
    Type: String
    Default: DeployToCloudFormationService
  StackName:
    Description: The CloudFormation stack name that you want to create or update.
    Type: String
  TemplatePath:
    Description: The path in your source repository to the CloudFormation template file to create or update your stack.
    Type: String
  OutputFileName:
    Description: The path the output from the CloudFormation stack update will be written to.
    Type: String
    Default: output.json
  CloudFormationResourcePermissions:
    Description: The permission required by CloudFormation to make resource calls on your behalf.
    Type: String
  RetentionPolicy:
    Description: Define if you'd like the resource retained or deleted when the
      CloudFormation stack is deleted.
    Type: String
    Default: Delete
    AllowedValues:
      - Delete
      - Retain
  TemplateConfiguration:
    Description: The path to a template configuration file containing parameter values and stack policy for creating or updating your stack.
    Type: String
    Default: ''
  ParameterOverrides:
    Description: A JSON string to provide parameter values that override defaults in the template or TemplateConfiguration file.
    Type: String
    Default: ''
Conditions:
  HasTemplateConfiguration: !Not [!Equals ['', !Ref TemplateConfiguration]]
  HasParameterOverrides: !Not [!Equals ['', !Ref ParameterOverrides]]
Resources:
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref CodePipelineArtifactsBucket
        Type: S3
      ExecutionMode: QUEUED
      Name: !Ref CodePipelineName
      PipelineType: V2
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: CodeConnections
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: '1'
              Configuration:
                ConnectionArn: !Ref ConnectionArn
                FullRepositoryId: !Ref FullRepositoryId
                BranchName: !Ref BranchName
              OutputArtifacts:
                - Name: SourceOutput
              RoleArn: !GetAtt CodePipelineSourceActionRole.Arn
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: CloudFormation
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND,CAPABILITY_NAMED_IAM
                StackName: !Ref StackName
                TemplatePath: !Sub SourceOutput::${TemplatePath}
                RoleArn: !GetAtt CloudFormationRole.Arn
                OutputFileName: !Ref OutputFileName
                TemplateConfiguration:
                  !If [HasTemplateConfiguration, !Sub "SourceOutput::${TemplateConfiguration}", !Ref "AWS::NoValue"]
                ParameterOverrides:
                  !If [HasParameterOverrides, !Ref ParameterOverrides, !Ref "AWS::NoValue"]
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: DeployOutput
              RoleArn: !GetAtt CodePipelineDeployActionRole.Arn
              RunOrder: 1
          OnFailure:
            Result: ROLLBACK
          BeforeEntry:
            Conditions:
              - Result: FAIL
                Rules:
                  - Name: MyDeploymentWindowRule
                    RuleTypeId:
                      Category: Rule
                      Owner: AWS
                      Provider: DeploymentWindow
                      Version: '1'
                    Configuration:
                      Cron: '* * * * * ? *'
                      TimeZone: 'PST'
    DependsOn:
      - CodePipelineRoleDefaultPolicy
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
        Version: '2012-10-17'
  CodePipelineRoleDefaultPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - !GetAtt CodePipelineArtifactsBucket.Arn
              - !Join
                - '/'
                - - !GetAtt CodePipelineArtifactsBucket.Arn
                  - '*'
          - Action:
              - s3:PutObjectAcl
              - s3:PutObjectVersionAcl
            Effect: Allow
            Resource: !Join
              - /
              - - !GetAtt CodePipelineArtifactsBucket.Arn
                - '*'
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              - !GetAtt CodePipelineSourceActionRole.Arn
              - !GetAtt CodePipelineDeployActionRole.Arn
          - Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - codebuild:StopBuild
              - codebuild:RetryBuild
              - codebuild:BatchGetBuildBatches
              - codebuild:StartBuildBatch
              - codebuild:StopBuildBatch
              - codebuild:RetryBuildBatch
            Effect: Allow
            Resource:
              - !Sub arn:${AWS::Partition}:codebuild:${AWS::Region}:${AWS::AccountId}:project/*
        Version: '2012-10-17'
      PolicyName: CodePipelineRoleDefaultPolicy
      Roles:
        - !Ref CodePipelineRole
  CodePipelineSourceActionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:root
        Version: '2012-10-17'
  CodePipelineSourceActionRoleDefaultPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: codestar-connections:UseConnection
            Effect: Allow
            Resource: !Ref ConnectionArn
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - !GetAtt CodePipelineArtifactsBucket.Arn
              - !Join
                - '/'
                - - !GetAtt CodePipelineArtifactsBucket.Arn
                  - '*'
          - Action:
              - s3:PutObjectAcl
              - s3:PutObjectVersionAcl
            Effect: Allow
            Resource: !Join
              - /
              - - !GetAtt CodePipelineArtifactsBucket.Arn
                - '*'
        Version: '2012-10-17'
      PolicyName: CodePipelineSourceActionRoleDefaultPolicy
      Roles:
        - !Ref CodePipelineSourceActionRole
  CodePipelineDeployActionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:root
        Version: '2012-10-17'
  CodePipelineDeployActionRoleDefaultPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - cloudformation:*
            Effect: Allow
            Resource: '*'
          - Action: iam:PassRole
            Condition:
              StringEqualsIfExists:
                iam:PassedToService:
                  - cloudformation.amazonaws.com
            Effect: Allow
            Resource: '*'
          - Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - !GetAtt CodePipelineArtifactsBucket.Arn
              - !Join
                - '/'
                - - !GetAtt CodePipelineArtifactsBucket.Arn
                  - '*'
          - Action:
              - s3:PutObjectAcl
              - s3:PutObjectVersionAcl
            Effect: Allow
            Resource: !Join
              - /
              - - !GetAtt CodePipelineArtifactsBucket.Arn
                - '*'
        Version: '2012-10-17'
      PolicyName: CodePipelineDeployActionRoleDefaultPolicy
      Roles:
        - !Ref CodePipelineDeployActionRole
  CloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
                - codepipeline.amazonaws.com
        Version: '2012-10-17'
  CloudFormationRoleDefaultPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - cloudformation:*
            Effect: Allow
            Resource:
              - !Sub arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${StackName}
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              - !GetAtt CodePipelineRole.Arn
          - Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - !GetAtt CodePipelineArtifactsBucket.Arn
              - !Join
                - '/'
                - - !GetAtt CodePipelineArtifactsBucket.Arn
                  - '*'
          - Action:
              - s3:PutObjectAcl
              - s3:PutObjectVersionAcl
            Effect: Allow
            Resource: !Join
              - /
              - - !GetAtt CodePipelineArtifactsBucket.Arn
                - '*'
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - !Sub
                - arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codepipeline/${pipelineName}
                - pipelineName: !Ref CodePipelineName
              - !Sub
                - arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codepipeline/${pipelineName}:*
                - pipelineName: !Ref CodePipelineName
        Version: '2012-10-17'
      PolicyName: CloudFormationDefaultPolicy
      Roles:
        - !Ref CloudFormationRole
  CloudFormationRoleResourceCreationPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument: !Ref CloudFormationResourcePermissions
      PolicyName: CloudFormationResourceCreationPolicy
      Roles:
        - !Ref CloudFormationRole
  CodePipelineArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    UpdateReplacePolicy: !Ref RetentionPolicy
    DeletionPolicy: !Ref RetentionPolicy
  CodePipelineArtifactsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref CodePipelineArtifactsBucket
      PolicyDocument:
        Statement:
          - Action: s3:*
            Condition:
              Bool:
                aws:SecureTransport: 'false'
            Effect: Deny
            Principal:
              AWS: '*'
            Resource:
              - !GetAtt CodePipelineArtifactsBucket.Arn
              - !Join
                - '/'
                - - !GetAtt CodePipelineArtifactsBucket.Arn
                  - '*'
        Version: '2012-10-17'
Outputs:
  ArtifactStoreLocation:
    Description: Name of the CodePipeline artifacts bucket
    Value: !Ref CodePipelineArtifactsBucket
    Export:
      Name: !Sub ${AWS::StackName}-ArtifactBucket
  PipelineRoleArn:
    Description: ARN of the main CodePipeline role
    Value: !GetAtt CodePipelineRole.Arn
    Export:
      Name: !Sub ${AWS::StackName}-CodePipelineRoleArn
  SourceActionRoleArn:
    Description: ARN of the CodePipeline source action role
    Value: !GetAtt CodePipelineSourceActionRole.Arn
    Export:
      Name: !Sub ${AWS::StackName}-CodePipelineSourceActionRoleArn
  CloudFormationRoleArn:
    Description: ARN of the CloudFormation execution role
    Value: !GetAtt CloudFormationRole.Arn
    Export:
      Name: !Sub ${AWS::StackName}-CloudFormationRoleArn
  DeployActionRoleArn:
    Description: ARN of the CodePipeline deploy action role
    Value: !GetAtt CodePipelineDeployActionRole.Arn
    Export:
      Name: !Sub ${AWS::StackName}-CodePipelineDeployActionRoleArn
